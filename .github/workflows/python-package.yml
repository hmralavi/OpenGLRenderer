# This workflow will install Python dependencies, run tests and lint with a variety of Python versions
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python

name: Python package

on:
  push:
    branches:
      - main
      - development
  pull_request:
    branches:
      - main
      - development

jobs:
  build:

    runs-on: windows-latest

    strategy:
      fail-fast: true
      matrix:
        python-version: ["3.8"]

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        python -m pip install flake8
        pip install .
        
    - name: Lint with flake8
      run: |
        # stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics 

    - name: Test with unittest
      run: |
        python -m unittest discover tests

    # - name: Build and deploy to PyPI
    #   if: success() && github.ref == 'refs/heads/main' && github.event_name == 'push'
    #   run: |
    #     pip install setuptools wheel twine
    #     python setup.py sdist bdist_wheel
    #     twine upload --repository pypi dist/*
    #   env:
    #     TWINE_USERNAME: __token__
    #     TWINE_PASSWORD: ${{ secrets.PYPI_TOKEN }}
